image: drinternet/rsync:1.0.1

variables:
  CONTAINER_ID: ""
  IMAGE_NAME: "airules_vm"
  IMAGE_ID: ""

stages:
  - lint
  - deploy

lint:
  stage: lint
  image: python:3.11
  script:
    - pip install poetry==1.2.0
    - cd src
    - poetry install
    - pip install flake8
    - flake8 app --extend-ignore=E501

deploy:
  stage: deploy  
  script:
    
    - echo "Deploying to production server..."
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - cd src
    - ssh -T -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "echo SSH connection successful"
    - rsync -e "ssh -i ~/.ssh/id_rsa" -rv * $SSH_USER@$SSH_HOST:airules

    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST 
      "cd airules &&
      sudo apt update &&
      sudo apt install python3 &&
      python3 -m venv airules_venv &&
      source airules_venv/bin/activate &&
      sudo apt install python3-pip &&
      pip install streamlit &&
      sudo apt update &&
      sudo cp config.toml /home/ubuntu/airules/airules_venv/lib/python3.11/site-packages/streamlit/config.toml &&
      sudo cp streamlitnginxconf /etc/nginx/sites-available/streamlitnginxconf &&
      sudo systemctl restart nginx"
    - |
      export CONTAINER_ID=$(ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "docker ps -a -q --filter 'ancestor=$IMAGE_NAME'")
      if [ -n "$CONTAINER_ID" ]; then
        ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST  "docker rm -f $CONTAINER_ID"
        echo "Container with ID $CONTAINER_ID removed."
      else
        echo "No container found for the specified $IMAGE_NAME."
      fi
    - |
      export IMAGE_ID=$(ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "docker images -q $IMAGE_NAME")
      if [ -n "$IMAGE_ID" ]; then
        ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "docker rmi -f $IMAGE_ID"
        echo "Docker image with ID $IMAGE_ID removed."
      else
        echo "No Docker image found for the specified $IMAGE_NAME."
      fi
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST 
        "cd airules &&
        docker build -t $IMAGE_NAME . &&
        docker run -d -v /etc/nginx/sites-available/streamlitnginxconf:/etc/nginx/nginx.conf -p 8501:8501 $IMAGE_NAME"
 
  only:
    - main
